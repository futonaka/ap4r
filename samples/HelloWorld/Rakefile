# Add your own tasks in files placed in lib/tasks ending in .rake,
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.

require(File.join(File.dirname(__FILE__), 'config', 'boot'))

require 'rubygems'
require 'rake'
require 'rake/testtask'
require 'rake/rdoctask'

require 'tasks/rails'
require 'active_support'


# HelloWorld release tasks --------------------------------------------------------
begin
  namespace :hoe do
    require 'hoe'

    AP4R_VERSION = '0.3.3'

    Hoe.new('HelloWorld', AP4R_VERSION) do |p|
      p.author = ["Shunichi Shinohara", "Kiwamu Kato"]
      p.changes = p.paragraphs_of('History.txt', 1..2).join("\n\n")
      #p.clean_globs =
      p.description = "One of AP4R's sample applications."
      p.email = %q{shinohara.shunichi@future.co.jp, kato.kiwamu@future.co.jp}

      #p.extra_deps <<
      p.name = 'HelloWorld'
      p.need_tar = true
      p.need_zip = false
      #p.rdoc_pattern =
      #p.remote_rdoc_dir =
      #p.rsync =
      p.rubyforge_name = 'ap4r'
      #p.spec_extra =
      p.summary = 'One of AP4Rs sample applications'
      #p.test_globs = 'test/**/*_test.rb'
      p.url = 'http://ap4r.rubyforge.org/wiki/wiki.pl?HomePage'
      p.version = AP4R_VERSION
    end
  end
rescue
end

namespace :release do
  desc 'Create Manifest.txt'
  task :create_manifest do
    path_list = []
    Find.find('.') do |path|
      next if path =~ /^\.\/?$|doc\/|tmp\/|pkg/
      next if path =~ /\.svn|CVS|\~$|\.log$|\.pid$|\.db$|uuid.state$|schema.rb$/
      path_list << path[2..-1]
    end

    File.open('Manifest.txt', 'w') do |manifest|
      path_list.sort.each do |path|
        manifest.puts(path)
      end
    end
  end

end

namespace :spec do
  task :stats_setup do
    require "code_statistics"
    %w(controllers helpers models views).map{ |flavor|
      ["#{flavor.capitalize} specs", "#{RAILS_ROOT}/spec/#{flavor}"]
    }.select{ |name, dir| File.directory?(dir) }.each { |name, dir|
      STATS_DIRECTORIES << [name, dir]
      CodeStatistics::TEST_TYPES << name
    }
  end

  desc "Run with rcov"
  Spec::Rake::SpecTask.new("coverage") do |t|
    t.spec_files = FileList["spec/**/*.rb"]
    t.rcov = true
    build_artifacts = ENV['CC_BUILD_ARTIFACTS']
    t.rcov_dir = build_artifacts.nil? ? "coverage" : "#{build_artifacts}"
    excludes = %w(^spec\/)
    if ENV['GEM_HOME']
      excludes << Regexp.escape(ENV['GEM_HOME'])
    end
    if ENV['RUBY_HOME']
      excludes << Regexp.escape(ENV['RUBY_HOME'])
    end
    t.rcov_opts = ["--exclude" , excludes.join(","),
                   "--text-summary"]
  end
end

task :stats => "spec:stats_setup"
